{
	"info": {
		"_postman_id": "b3565d77-94ef-4cc5-b47f-47c0f62834ee",
		"name": "Practica5-PetStoreComplete",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11029039"
	},
	"item": [
		{
			"name": "GET -upload image-Error Método no Permitido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el código de respuesta\", function(){\r",
							" pm.response.to.have.status(405)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar que hay un body response\", function(){\r",
							" pm.response.to.be.withBody\r",
							"})\r",
							"\r",
							"console.log(pm.response.text()) //El response lo convierte en texto\r",
							"\r",
							"pm.test(\"Validar que dentro de la respuesta exista un unknown\", function(){\r",
							" pm.expect(pm.response.text()).to.include(\"unknown\")\r",
							" })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{url_base}}/v2/pet/2/uploadImage",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"v2",
						"pet",
						"2",
						"uploadImage"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - Create pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let messageString = pm.response.text().split(':')[1];\r",
							"console.log(messageString.split(',')[0])\r",
							"pm.environment.set(\"id\",messageString.split(',')[0]);\r",
							"\r",
							"pm.test(\"Validar el código de respuesta\", function(){\r",
							" pm.response.to.have.status(200)\r",
							"})\r",
							"pm.test(\"Validar que el estatus sea available\", function(){\r",
							" pm.expect(pm.response.text()).to.include(\"available\")\r",
							" })"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"Perros\"\r\n  },\r\n  \"name\": \"COCO\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url_base}}/v2/pet",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - get create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el tiempo de respuesta\",function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below (500)\r",
							"}) \r",
							"\r",
							"pm.test(\"Validar el código de respuesta\", function(){\r",
							" pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar que dentro de la respuesta esta id\", function(){\r",
							" pm.expect(pm.response.text()).to.include(\"id\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{url_base}}/v2/pet/{{id}}",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"v2",
						"pet",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE - update pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el tiempo de respuesta\",function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below (500)\r",
							"}) \r",
							"\r",
							"pm.test(\"Validar el código de respuesta\", function(){\r",
							" pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar que dentro de la respuesta esta el nuevo nombre -Lluvia-v2-\", function(){\r",
							" pm.expect(pm.response.text()).to.include(\"Lluvia-v2\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{id}},\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"Lluvia-v2\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url_base}}/v2/pet",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"v2",
						"pet"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el tiempo de respuesta\",function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below (500)\r",
							"}) \r",
							"\r",
							"pm.test(\"Validar el código de respuesta\", function(){\r",
							" pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar que dentro de la respuesta esta id\", function(){\r",
							" pm.expect(pm.response.text()).to.include(\"id\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{url_base}}/v2/pet/{{id}}",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"v2",
						"pet",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST -upload imagae",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el tiempo de respuesta\",function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below (500)\r",
							"}) \r",
							"\r",
							"pm.test(\"Validar el código de respuesta\", function(){\r",
							" pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar que hay un body response\", function(){\r",
							" pm.response.to.be.withBody\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": " multipart/form-data",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "/C:/Users/cynth/Downloads/imagen.jpg"
						}
					]
				},
				"url": {
					"raw": "https://{{url_base}}/v2/pet/2/uploadImage",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"v2",
						"pet",
						"2",
						"uploadImage"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - upload imagae",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el tiempo de respuesta\",function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below (500)\r",
							"}) \r",
							"\r",
							"pm.test(\"Validar el código de respuesta\", function(){\r",
							" pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar que dentro de la respuesta esta id\", function(){\r",
							" pm.expect(pm.response.text()).to.include(\"id\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{url_base}}/v2/pet/{{id}}",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"v2",
						"pet",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete- pet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el tiempo de respuesta\",function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below (500)\r",
							"}) \r",
							"\r",
							"pm.test(\"Validar el código de respuesta\", function(){\r",
							" pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar que dentro de la respuesta esta unknown\", function(){\r",
							" pm.expect(pm.response.text()).to.include(\"unknown\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://{{url_base}}/v2/pet/{{id}}",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"v2",
						"pet",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validar el tiempo de respuesta\",function (){\r",
							"    pm.expect(pm.response.responseTime).to.be.below (500)\r",
							"}) \r",
							"\r",
							"pm.test(\"Validar el código de respuesta\", function(){\r",
							" pm.response.to.have.status(404)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar que dentro de la respuesta esta -Pet not found-\", function(){\r",
							" pm.expect(pm.response.text()).to.include(\"Pet not found\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{url_base}}/v2/pet/{{id}}",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"v2",
						"pet",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}